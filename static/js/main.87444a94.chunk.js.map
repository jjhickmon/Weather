{"version":3,"sources":["SearchBar.js","HourlyPrediction.js","DailyPrediction.js","WeatherStats.js","Themes.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","_handleKeyDown","bind","getVal","state","input","e","key","this","search","document","querySelector","value","words","split","map","word","toUpperCase","substring","join","city","onKeyDown","type","id","placeholder","React","Component","HourlyPrediction","className","hourly","index","hours","Date","dt","getHours","ampm","pop","Math","round","src","weather","icon","alt","temp","daily","day","getDay","max","min","date","current","sunrise","getMinutes","sunset","theta","wind_deg","wind_speed","getSunrise","getSunset","humidity","getWind","feels_like","rain","pressure","visibility","uvi","pallette","themes","App","getCity","updateWeather","setWeather","getLocation","load","showPage","setTheme","theme","cookies","location","description","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","length","fetch","then","data","json","name","lat","lon","response","getElementById","onload","ok","Error","catch","error","localStorage","getItem","setItem","i","documentElement","style","setProperty","setTimeout","display","theme_names","Object","keys","indexOf","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.87444a94.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this._handleKeyDown = this._handleKeyDown.bind(this);\n        this.getVal = this.getVal.bind(this);\n        this.state = {input: \"\"};\n    }\n\n    _handleKeyDown(e) {\n        if (e.key === 'Enter') {\n            this.getVal();\n        }\n    }\n\n    getVal() {\n        var search = document.querySelector('input').value;\n        const words = search.split(\" \");\n        search = words.map((word) => { \n            return word[0].toUpperCase() + word.substring(1); \n        }).join(\" \");\n        this.props.city(search);\n    }\n\n    render() {\n        return (\n            <div>\n                <input onKeyDown={this._handleKeyDown}\n                    type=\"text\"\n                    id=\"search-bar\"\n                    placeholder=\"Search Your City Here\"\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class HourlyPrediction extends React.Component {\n    render() {\n        return (\n            <div className=\"hourly\">\n                {this.props.hourly.map(\n                    function(hourly, index) {\n                        if (index < 24) {\n                            var date = new Date(hourly.dt * 1000);\n                            var hours = date.getHours();\n                            var ampm = hours >= 12 ? 'pm' : 'am';\n                            hours = hours % 12 ? hours % 12 : 12;\n                            return (\n                                <div key={index}>\n                                    <p className=\"forecast-time\">\n                                        {index === 0 ? \"Now\" : hours + ampm}\n                                    </p>\n                                    <p className=\"POP\">\n                                        {hourly.pop*100 >= 30 ? Math.round(hourly.pop*100)+\"%\" : \"-\"}\n                                    </p>\n                                    <img src={\"https://openweathermap.org/img/wn/\"+hourly.weather[0].icon+\"@2x.png\"} alt=\"weather icon\"/>\n                                    <p className=\"forecast-temp\">\n                                        {Math.round(hourly.temp)}°\n                                    </p>\n                                </div>\n                            );\n                        }\n                        return null;\n                    }\n                )}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class HourlyPrediction extends React.Component {\n    render() {\n        return (\n            <div className=\"daily\">\n                {this.props.daily.map(\n                    function(daily, index) {\n                        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n                        if (1 <= index && index < 7) {\n                            var date = new Date(daily.dt * 1000);\n                            var day = date.getDay();\n                            return (\n                                <div className=\"day\" key={index}>\n                                    <div className=\"name\">\n                                        <p>\n                                            {days[day]}\n                                        </p>\n                                    </div>\n                                    <div className=\"icon\">\n                                        <img src={\"https://openweathermap.org/img/wn/\"+daily.weather[0].icon+\"@2x.png\"} alt=\"weather icon\"/>\n                                    </div>\n                                    <div className=\"POP\">\n                                            {Math.round(daily.pop*100)+\"%\"}\n                                    </div>\n                                    <div className=\"max\">\n                                        <p>\n                                            {Math.round(daily.temp.max)}\n                                        </p>\n                                    </div>\n                                    <div className=\"min\">\n                                        <p>\n                                            {Math.round(daily.temp.min)}\n                                        </p>\n                                    </div>\n                                </div>\n                            );\n                        }\n                        return null;\n                    }\n                )}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class HourlyPrediction extends React.Component {    \n    getSunrise() {\n        var date = new Date(this.props.current.sunrise * 1000);\n        var sunrise = date.getHours();\n        var ampm = sunrise >= 12 ? 'pm' : 'am';\n        sunrise = sunrise % 12 ? sunrise % 12 : 12;\n        sunrise += date.getMinutes() < 10 ? \":0\" + date.getMinutes() : \":\" + date.getMinutes();\n        return (\n            <p>\n                {sunrise + ampm}\n            </p>\n        );\n    }\n\n    getSunset() {\n        var date = new Date(this.props.current.sunset * 1000);\n        var sunset = date.getHours();\n        var ampm = sunset >= 12 ? 'pm' : 'am';\n        sunset = sunset % 12 ? sunset % 12 : 12;\n        sunset += date.getMinutes() < 10 ? \":0\" + date.getMinutes() : \":\" + date.getMinutes();\n        return (\n            <p>\n                {sunset + ampm}\n            </p>\n        );\n    }\n\n    getWind() {\n        var theta = Math.round(((this.props.current.wind_deg/45.0)+.5));\n        var directions =[\"N\",\"NE\",\"E\", \"SE\",\"S\",\"SW\",\"W\",\"NW\"]\n        return (\n            <p>\n                {directions[(theta % 8)] + \" \" + this.props.current.wind_speed + \"mph\"}\n            </p>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"weather-stats\">\n                <section>\n                    <div className=\"sunrise\">\n                        <h6>Sunrise</h6>\n                        {this.getSunrise()}\n                    </div>\n                    <div className=\"sunset\">\n                        <h6>Sunset</h6>\n                        {this.getSunset()}\n                    </div>\n                </section>\n                <section>\n                    <div className=\"POP\">\n                        <h6>Chance of Rain</h6>\n                        <p>\n                            {Math.round(this.props.daily[0].pop * 100) + \"%\"}\n                        </p>\n                    </div>\n                    <div className=\"humididty\">\n                        <h6>Humididty</h6>\n                        <p>\n                            {this.props.current.humidity + \"%\"}\n                        </p>\n                    </div>\n                </section>\n                <section>\n                    <div className=\"wind\">\n                        <h6>Wind</h6>\n                        {this.getWind()}\n                    </div>\n                    <div className=\"feels-like\">\n                        <h6>Feels Like</h6>\n                        <p>\n                            {Math.round(this.props.current.feels_like) + \"°\"}\n                        </p>\n                    </div>\n                </section>\n                <section>\n                    <div className=\"Precipitation\">\n                        <h6>Precipitation</h6>\n                        <p>\n                            {(this.props.daily[0].rain ? this.props.daily[0].rain : 0) + \" in\"}\n                        </p>\n                    </div>\n                    <div className=\"Pressure\">\n                        <h6>Pressure</h6>\n                        <p>\n                            {(Math.round(this.props.current.pressure / 33.863886666667 * 100) / 100) + \" inHg\"}\n                        </p>\n                    </div>\n                </section>\n                <section>\n                    <div className=\"visibility\">\n                        <h6>Visibility</h6>\n                        <p>\n                            {Math.round(this.props.current.visibility * 0.000621371) + \" mi\"}\n                        </p>\n                    </div>\n                    <div className=\"uvi\">\n                        <h6>UV Index</h6>\n                        <p>\n                            {this.props.current.uvi}\n                        </p>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}","/* eslint-disable no-unused-vars */\nexport const pallette = ['--primary-color', '--secondary-color', '--tertiary-color', '--primary-accent-color', '--primary-shading-color', '--secondary-shading-color'];\nconst light = ['var(--cream)', 'var(--dark-blue)', 'var(--light-blue)', 'var(--light-grey)', 'var(--transparent)', 'var(--translucent-white2)'];\nconst dark = ['var(--dark-blue)', 'var(--cream)', 'var(--dark-blue)', 'var(--darker-blue)', 'var(--translucent-black)', 'var(--translucent-white1)'];\nconst brown = ['var(--cream)', 'var(--brown5)', 'var(--brown5)', 'var(--brown3)', 'var(--transparent)', 'var(--translucent-white2)'];\nconst green = ['var(--cream)', 'var(--green6)', 'var(--green5)', 'var(--green4)', 'var(--transparent)', 'var(--translucent-white2)'];\nconst light_blue = ['var(--cream)', 'var(--dark-blue)', 'var(--light-blue)', 'var(--light-blue)', 'var(--transparent)', 'var(--translucent-white2)'];\nexport const themes = {\"light\":light, \"brown\":brown, \"green\":green, \"light blue\":light_blue, \"dark\":dark};","import React from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar.js';\nimport HourlyPrediction from './HourlyPrediction.js';\nimport DailyPrediction from './DailyPrediction.js';\nimport WeatherStats from './WeatherStats.js';\nimport { themes, pallette} from './Themes.js';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCity = this.getCity.bind(this);\n        this.updateWeather = this.updateWeather.bind(this);\n        this.setWeather = this.setWeather.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n        this.load = this.load.bind(this);\n        this.showPage = this.showPage.bind(this);\n        this.setTheme = this.setTheme.bind(this);\n        this.state = {\n            theme: \"\",\n            city: \"\",\n            cookies: false,\n            location: [],\n            current: {temp: 0, weather: [{description: \"\"}], wind_speed: 0},\n            hourly: [],\n            daily: [{temp: {min: 0, max: 0}}]\n        };\n    }\n\n    getLocation() {\n        navigator.geolocation.getCurrentPosition(position => {\n            this.setState({\n                cookies: true,\n                location: [position.coords.latitude, position.coords.longitude]\n            }, () => this.updateWeather());\n        }, this.updateWeather());\n    }\n\n    updateWeather() {\n        console.log(this.state.location);\n        if (this.state.location.length === 0) {\n            console.log(\"no location data provided\");\n            if (this.state.city === \"\") {\n                this.setState({\n                    city: \"Seattle\"\n                }, () => this.setWeather());\n            } else {\n                this.setWeather();\n            }\n        } else {\n            fetch('http://api.openweathermap.org/geo/1.0/reverse?lat='+this.state.location[0]+'&lon='+this.state.location[1]+'&limit=1&appid=b5b4f0115cb376736a2f740df42c821b')\n            .then(data => data.json())\n            .then(data => {\n                this.setState({\n                    city: data[0].name\n                }, () => this.setWeather());\n            });\n        }\n    }\n\n    setWeather() {\n        fetch('https://api.openweathermap.org/geo/1.0/direct?q='+this.state.city+'&appid=b5b4f0115cb376736a2f740df42c821b')\n        .then(data => data.json())\n        .then(data => {\n            this.setState({\n                location: [data[0].lat, data[0].lon]\n            });\n            fetch('https://api.openweathermap.org/data/2.5/onecall?lat='+this.state.location[0]+'&lon='+this.state.location[1]+'&units=imperial&appid=b5b4f0115cb376736a2f740df42c821b')\n            .then(response => response.json())\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    current: response.current,\n                    hourly: response.hourly,\n                    daily: response.daily\n                });\n            })\n        })\n    }\n\n    componentDidMount() {\n        document.getElementById('body').onload = this.load();\n        this.getLocation();\n    }\n    \n    getCity(city) {\n        var url = 'https://api.openweathermap.org/data/2.5/weather?q='+city+'&units=imperial&appid=b5b4f0115cb376736a2f740df42c821b';\n        fetch(url)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error('Error: '+city+' is not a city in the openweathermap api database');\n            }\n        })\n        .then(response => {\n            this.setState({city: city});\n            this.updateWeather();\n        }).catch((error) => {\n            console.log(error);\n        });\n\n    }\n\n    load() {\n        if (localStorage.getItem(\"theme\") === null) {\n            localStorage.setItem(\"theme\", \"light\");\n        }\n        if (localStorage.getItem(\"theme\") in themes) {\n            for (let i = 0; i < pallette.length; i++) {\n                document.documentElement.style.setProperty(pallette[i], themes[localStorage.getItem(\"theme\")][i]);\n            }\n        }\n        setTimeout(this.showPage, 4000);\n    }\n\n    showPage() {\n        document.getElementById(\"preloader\").style.display = \"none\";\n        document.getElementById(\"root\").style.display = \"block\";\n    }  \n\n    setTheme() {\n        let theme_names = Object.keys(themes);\n        localStorage.setItem(\"theme\", theme_names[(theme_names.indexOf(localStorage.getItem(\"theme\")) + 1) % theme_names.length]);\n        this.load();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <script type=\"text/javascript\" src=\"Themes.js\"></script> \n                <div className=\"search\">\n                    <SearchBar id=\"search-bar\" city={this.getCity}/>\n                    <button id=\"theme-switch\" onClick={this.setTheme}>\n                        <img src=\"https://img.icons8.com/material-outlined/24/000000/sun--v1.png\" alt=\"theme icon\"/>\n                    </button>\n                </div>\n                <main>\n                    <div className=\"header\">\n                        <p id=\"city\">\n                            {this.state.city}\n                        </p>\n                        <p id=\"weather\">\n                            {this.state.current.weather[0].description}\n                        </p>\n                    </div>\n                    <div className=\"curr-temp\">\n                        <p id=\"temp\">\n                            {Math.round(this.state.current.temp)}°F\n                        </p>\n                        <div className=\"low-high\">\n                            <p id=\"temp_min\">\n                                L: {Math.round(this.state.daily[0].temp.min)}°\n                            </p>\n                            <p id=\"temp_max\">\n                                H: {Math.round(this.state.daily[0].temp.max)}°\n                            </p>\n                        </div>\n                    </div>\n                </main>\n                <div className=\"data\">\n                    <HourlyPrediction id=\"hourly\" hourly={this.state.hourly}/>\n                    <DailyPrediction id=\"daily\" daily={this.state.daily}/>\n                    <WeatherStats id=\"weather-stats\" current={this.state.current} daily={this.state.daily}/>\n                </div>\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}